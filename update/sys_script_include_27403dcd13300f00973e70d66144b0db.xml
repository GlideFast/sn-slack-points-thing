<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_snc_slack_points.PointCalculator</api_name>
        <client_callable>false</client_callable>
        <description/>
        <name>PointCalculator</name>
        <script><![CDATA[var PointCalculator = Class.create();
PointCalculator.prototype = {

	initialize: function(userGR) {
		this.user = userGR;
	},

	syncPointsToUserRecord: function() {
		this.user.points = this.calculate(); 
		this.user.update(); 
	}, 

	calculate: function() {
		var userID = this.user.getUniqueValue(); 
		var gaPoints = new GlideAggregate('x_snc_slack_points_point');
		gaPoints.addQuery('target', userID); 
		gaPoints.addAggregate('COUNT');
		gaPoints.query();
		if (gaPoints.next()) {
			var points = gaPoints.getAggregate('COUNT'); 
			return points; 
		} else {
			return 0;
		}
	},

	getTopForSlack: function(text){
		var returnObj = {};
		returnObj.success = false;
		returnObj.message = '';
		var top = new GlideRecord('x_snc_slack_points_slack_user');
		top.orderByDesc('points');
		if(text == 'top20'){
			top.setLimit(20);
		}
		else if(text == 'top50'){
			top.setLimit(50);
		}
		top.query();
		if(top.hasNext()){
			returnObj.success = true;
			while(top.next()){
				if(returnObj.message != ''){
					returnObj.message += '\n';
				}
				returnObj.message += top.user.getDisplayValue() + ': ' + top.points;
			}
		}

		return returnObj;
	},

	/**

	* Description: getTop is used to get the top point receivers overall or for a given period of time for display on the portal

	* Parameters:
		startDate (optional dateTime)
		endDate (optional dateTime)
		
		If startDate is not present, endDate is irrelevant and "all time" numbers will be used

	* Returns:
		returnObj (array of objects containing User's Name [user], User's Slack User Name [slack_user], Users' Points [points])
	*/

	getTop: function(startDate,endDate){
		var returnObj = [];
		
		if(!startDate){
			returnObj = this._getTopNoTimeFrame();
		}
		else{
			returnObj = this._getTopWithTimeFrame(startDate, endDate);
		}
		
		return returnObj;
	},
	
	_getTopNoTimeFrame: function(){
		var returnObj = [];
		var count = 1;
		var users = new GlideRecord('x_snc_slack_points_slack_user');
		users.orderByDesc('points');
		users.query();
		while(users.next()){
			returnObj.push({
				number: count,
				user: users.getDisplayValue('user'),
				slack_user: users.getValue('user_name'),
				sys_user_id: users.getValue('user'),
				points: users.getValue('points')
			});
			count++;
		}
		return returnObj;
	},
	
	_getTopWithTimeFrame: function(start, end){
		var returnObj = [];
		var count = 1;
		var points = new GlideAggregate('x_snc_slack_points_point');
		points.addQuery('date_given','>=',start);
		points.addQuery('date_given','<=',end);
		points.addAggregate('COUNT');
		points.groupBy('target');
		points.orderByAggregate('COUNT');
		points.query();
		while(points.next()){
			returnObj.push({
				number: count,
				user: points.target.user.getDisplayValue(),
				slack_user: points.target.user_name+'',
				sys_user_id: points.target.user+'',
				points: points.getAggregate('COUNT')
			});
			count++;
		}
		return returnObj;
	},

	type: 'PointCalculator'
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>josh.nerius</sys_created_by>
        <sys_created_on>2017-08-23 20:18:27</sys_created_on>
        <sys_id>27403dcd13300f00973e70d66144b0db</sys_id>
        <sys_mod_count>16</sys_mod_count>
        <sys_name>PointCalculator</sys_name>
        <sys_package display_value="Slack Points Thing" source="x_snc_slack_points">4f6df3c813444f009718b9b76144b02c</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Slack Points Thing">4f6df3c813444f009718b9b76144b02c</sys_scope>
        <sys_update_name>sys_script_include_27403dcd13300f00973e70d66144b0db</sys_update_name>
        <sys_updated_by>Dennis.Bennett</sys_updated_by>
        <sys_updated_on>2019-05-29 14:49:51</sys_updated_on>
    </sys_script_include>
</record_update>
